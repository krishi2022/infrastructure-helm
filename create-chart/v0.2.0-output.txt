NAME: react-release
LAST DEPLOYED: Sun Oct 30 22:35:30 2022
NAMESPACE: default
STATUS: deployed
REVISION: 2
USER-SUPPLIED VALUES:
null

COMPUTED VALUES:
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: datadaddy/react-demo
  tag: ""
imagePullSecrets: []
ingress:
  annotations: {}
  className: ""
  enabled: false
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 80
  type: LoadBalancer
serviceAccount:
  annotations: {}
  create: true
  name: ""
tolerations: []

HOOKS:
---
# Source: hello-react/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "react-release-hello-react-test-connection"
  labels:
    helm.sh/chart: hello-react-0.1.0
    app.kubernetes.io/name: hello-react
    app.kubernetes.io/instance: react-release
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['react-release-hello-react:80']
  restartPolicy: Never
MANIFEST:
---
# Source: hello-react/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: react-release-hello-react
  labels:
    helm.sh/chart: hello-react-0.1.0
    app.kubernetes.io/name: hello-react
    app.kubernetes.io/instance: react-release
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: hello-react/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: react-release-hello-react
  labels:
    helm.sh/chart: hello-react-0.1.0
    app.kubernetes.io/name: hello-react
    app.kubernetes.io/instance: react-release
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hello-react
    app.kubernetes.io/instance: react-release
---
# Source: hello-react/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-release-hello-react
  labels:
    helm.sh/chart: hello-react-0.1.0
    app.kubernetes.io/name: hello-react
    app.kubernetes.io/instance: react-release
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-react
      app.kubernetes.io/instance: react-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-react
        app.kubernetes.io/instance: react-release
    spec:
      serviceAccountName: react-release-hello-react
      securityContext:
        {}
      containers:
        - name: hello-react
          securityContext:
            {}
          image: "datadaddy/react-demo:0.2.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}

NOTES:
1. Get the application URL by running these commands:
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace default svc -w react-release-hello-react'
  export SERVICE_IP=$(kubectl get svc --namespace default react-release-hello-react --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
  echo http://$SERVICE_IP:80
